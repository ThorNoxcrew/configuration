input = {
    name = ace_race
}

unused_sections = {
    clouds = [
        [0, 0]
        [1, 0]
    ]
    pythons_crypt = [[3, 0]]
}
sections = {
    space_race = [
        [5, 0]
        [5, -1]
    ]
}

scanner = [
    // general markers in all maps
    {
        sections = {
            strategy = DENY
            entries = []
        }
        targets = {
            // spawn
            player_spawnpoints = {
                type = grouped
                marker = "mcc:markers.player_spawnpoints"
                amount = 40..40
            }
            spectator_spawnpoints = {
                type = single
                marker = "mcc:markers.spectator_spawnpoints"
            }
            spawn_barriers = {
                type = area
                marker = "mcc:markers.spawn_barriers"
                amount = 1..
                metadata = {
                    "Block" = {
                        type = String
                    }
                }
            }

            // checkpoints
            normal_checkpoints = {
                type = area
                marker = "mcc:markers.ace_race.checkpoint.normal"
                metadata = {
                    "Checkpoint" = {
                        type = String
                    }
                }
            }
            key_checkpoints = {
                type = area
                marker = "mcc:markers.ace_race.checkpoint.key"
                metadata = {
                    "Checkpoint" = {
                        type = String
                    }
                }
            }
            out_of_bounds = {
                type = area
                marker = "mcc:markers.ace_race.out_of_bounds"
                metadata = {
                    "Checkpoint" = {
                        type = String
                        amount = 0..1
                    }
                }
            }

            // activatables
            speed_boosts = {
                type = single
                marker = "mcc:markers.ace_race.speed_boosts"
            }
            jump_pads = {
                type = single
                marker = "mcc:markers.ace_race.jump_pads"
            }
            mega_jump_pads = {
                type = single
                marker = "mcc:markers.ace_race.mega_jump_pads"
            }
            aqua_launchers = {
                type = single
                marker = "mcc:markers.ace_race.aqua_launchers"
            }
            wing_rings = {
                type = single
                marker = "mcc:markers.ace_race.wing_rings"
            }
        }
    }
    // look for respawn points in checkpoints
    {
        areas = [
            normal_checkpoints
            key_checkpoints
        ]
        targets = {
            respawn_point = {
                type = single
                marker = "mcc:markers.ace_race.respawn_point"
                amount = ..1
            }
        }
    }
]

processors = [
    {
        type = lighting_updater
    }
    {
        type = split_per_section
    }
    {
        type = empty_region_padding
    }
]
