server = event

worlds = [
    {
        name = grid_runners

        sections = {
            arena = [
                [0, 0]
                [1, 0]
            ]
            ref_rooms = [
                [11, 9]
                [12, 9]
                [13, 9]
                [14, 9]
            ]
        }
    }
]

scans = [
    {
        sections = [
            arena
        ]
        targets = {
            player_spawnpoints = {
                type = TRANSFORM
                marker = "mcc:markers.player_spawnpoint"
                amount = "40"
                metadata = {
                    "Team" = {
                        type = String
                        amount = "4"
                        values = [
                            Red
                            Orange
                            Yellow
                            Lime
                            Green
                            Cyan
                            Aqua
                            Blue
                            Purple
                            Pink
                        ]
                    }
                }
            }
            spectator_spawnpoint = {
                type = TRANSFORM
                marker = "mcc:markers.spectator_spawnpoint"
                amount = 1..
            }
            spawn_barriers = {
                type = REGION
                marker = "mcc:markers.spawn_barrier"
                amount = 1..
            }

            paste_anchors = {
                type = BLOCK
                marker = "mcc:markers.grid_runners.paste_anchor.normal"
                amount = "32"
                metadata = {
                    "RoomIndex" = {
                        type = Int
                    }
                }
            }
            flipped_paste_anchors = {
                type = BLOCK
                marker = "mcc:markers.grid_runners.paste_anchor.flipped"
                amount = "32"
                metadata = {
                    "RoomIndex" = {
                        type = Int
                    }
                }
            }
           edge_paste_anchors = {
                type = BLOCK
                marker = "mcc:markers.grid_runners.paste_anchor.normal.edge"
                amount = "8"
                metadata = {
                    "RoomIndex" = {
                        type = Int
                    }
                }
            }
            flipped_edge_paste_anchors = {
                type = BLOCK
                marker = "mcc:markers.grid_runners.paste_anchor.flipped.edge"
                amount = "8"
                metadata = {
                    "RoomIndex" = {
                        type = Int
                    }
                }
            }
        }
    }
    {
        sections = [
            ref_rooms
        ]
        targets = {
            rooms = {
                type = DOMAIN
                marker = "mcc:markers.grid_runners.room"
                metadata = {
                    "Room" = {
                        type = String
                    }
                    "Category" = {
                        type = StringList
                        count = 1..
                    }
                    "Flippable" = {
                        type = Boolean
                        default = "false"
                    }
                }
                amount = 1..
            }
            room_walls = {
                type = DOMAIN
                marker = "mcc:markers.grid_runners.wall"
                metadata = {
                    "Room" = {
                        type = String
                    }
                }
                amount = 1..
            }
        }
    }
    {
        areas = [
            rooms
        ]
        targets = {
            entry_scales = {
                type = BLOCK
                marker = "mcc:markers.grid_runners.entry_scale"
                amount = 1..
                metadata = {
                    "Amount" = {
                        type = Double
                    }
                }
            }
            "entry_door.in" {
                type = BLOCK
                marker = "mcc:markers.grid_runners.entry_door.in"
                amount = 1..
            }
            "entry_door.out" {
                type = BLOCK
                marker = "mcc:markers.grid_runners.entry_door.out"
                amount = 1..
            }
            exit_door {
                type = BLOCK
                marker = "mcc:markers.grid_runners.exit_door"
                amount = 1..
            }

            // redstone signal rooms
            input = {
                type = BLOCK
                marker = "mcc:markers.grid_runners.redstone_signal.input"
                amount = 1..
                metadata = {
                    "Id" = {
                        type = Int
                        default = "0"
                    }
                }
            }
            output = {
                type = BLOCK
                marker = "mcc:markers.grid_runners.redstone_signal.output"
                amount = 0..
                metadata = {
                    "Id" = {
                        type = Int
                        default = "0"
                    }
                }
            }
        }
    }
]