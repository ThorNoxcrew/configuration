worlds = [
    {
        server = event
        name = grid_runners

        sections = {
            arena = [
                [0, 0]
                [1, 0]
            ]
            ref_rooms = {
                [11, 9]
                [12, 9]
                [13, 9]
                [14, 9]
            }
        }
    }
]

scanner = [
    {
        sections = [
            arena
        ]
        targets = {
            player_spawnpoints = {
                type = grouped
                marker = "mcc:markers.player_spawnpoints"
                amount = 40
            }
            spectator_spawnpoints = {
                type = single
                marker = "mcc:markers.spectator_spawnpoints"
                amount = 1..
            }
            spawn_barriers = {
                type = area
                marker = "mcc:markers.spawn_barriers"
                amount = 1..
                metadata = {
                    "Block" = {
                        type = String
                    }
                }
            }

            paste_anchors = {
                type = single
                marker = "mcc:markers.grid_runners.paste_anchor.normal"
                amount = 32
                metadata = {
                    "RoomIndex" = {
                        type = Int
                    }
                }
            }
            mirror_paste_anchors = {
                type = single
                marker = "mcc:markers.grid_runners.paste_anchor.mirrored"
                amount = 32
                metadata = {
                    "RoomIndex" = {
                        type = Int
                    }
                }
            }
           edge_paste_anchors = {
                type = single
                marker = "mcc:markers.grid_runners.paste_anchor.normal.edge"
                amount = 8
                metadata = {
                    "RoomIndex" = {
                        type = Int
                    }
                }
            }
            mirror_edge_paste_anchors = {
                type = single
                marker = "mcc:markers.grid_runners.paste_anchor.mirrored.edge"
                amount = 8
                metadata = {
                    "RoomIndex" = {
                        type = Int
                    }
                }
            }
        }
    }
    {
        sections = [
            rooms
        ]
        targets = {
            rooms = {
                type = area
                marker = "mcc:markers.grid_runners.room"
                metadata = {
                    "Room" = {
                        type = String
                    }
                    "Category" = {
                        type = StringList
                    }
                    "Flippable" = {
                        type = Boolean
                        default = false
                    }
                }
                amount = 1..
            }
            room_walls = {
                type = area
                marker = "mcc:markers.grid_runners.wall"
                metadata = {
                    "Room" = {
                        type = String
                    }
                }
                amount = 1..
            }
        }
    }
    {
        areas = [
            rooms
        ]
        targets = {
            entry_scales = {
                type = single
                marker = "mcc:markers.grid_runners.entry_scales"
                metadata = {
                    "Amount" = {
                        type = Double
                    }
                }
                amount = 1..
            }
            entry_door.in {
                type = single
                marker = "mcc:markers.grid_runners.entry_door.in"
                amount = 1..
            }
            entry_door.out {
                type = single
                marker = "mcc:markers.grid_runners.entry_door.out"
                amount = 1..
            }
            exit_door {
                type = single
                marker = "mcc:markers.grid_runners.exit_door"
                amount = 1..
            }
        }
    }
    {
        areas = [
            "rooms[Category=redstone_signal]"
        ]
        targets = {
            input = {
                type = single
                marker = "mcc:markers.grid_runners.redstone_signal.input"
                amount = 1..
                metadata = {
                    "Id" = {
                        type = Int
                        default = 0
                    }
                }
            }
            output = {
                type = single
                marker = "mcc:markers.grid_runners.redstone_signal.output"
                amount = 0..
                metadata = {
                    "Id" = {
                        type = Int
                        default = 0
                    }
                }
            }
        }
    }
]